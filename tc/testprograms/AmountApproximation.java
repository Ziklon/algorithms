import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class AmountApproximation
{
	private TreeMap<Integer,Integer>M;
	int dp[];
	int curD;
	int aa, bb;

	private int go(int b){
		if(!M.containsKey(b)){
			M.put(b,M.size()+1);
		}
		if(b>=curD)return b;
		int index=M.get(b);
		int ref=dp[index];
		if(ref!=-1)return ref;
		
		ref=1<<30;
		ref=Math.min(ref,go(b+aa));
		ref=Math.min(ref,go(b+bb));		
		dp[index]=ref;
		return ref;						
	}

	public int approximate(int D, int p1, int p2)
	{
		int ans=0;
		int mnp=Math.min(p1,p2);
		dp=new int[1000000];
		Arrays.fill(dp,-1);
		aa=p1;
		bb=p2;
		M=new TreeMap<Integer,Integer>();
		
		while(true){
			int nd=D/mnp;
			if(nd<=100)break;
			int rest=D-((50-nd)*mnp);
			ans+=rest;
			D-=rest;			
		}
		curD=D;
		System.out.println(D+" "+ans);
		int aux=go(ans);
		return ans+aux;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
		System.out.println("]");
		AmountApproximation obj;
		int answer;
		obj = new AmountApproximation();
		long startTime = System.currentTimeMillis();
		answer = obj.approximate(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		int p3;
		
		// ----- test 0 -----
		p0 = 17;
		p1 = 7;
		p2 = 9;
		p3 = 18;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 17;
		p1 = 7;
		p2 = 13;
		p3 = 20;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 21;
		p1 = 7;
		p2 = 13;
		p3 = 21;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 37;
		p1 = 9;
		p2 = 17;
		p3 = 43;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 287341;
		p1 = 2345;
		p2 = 7253;
		p3 = 287398;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
