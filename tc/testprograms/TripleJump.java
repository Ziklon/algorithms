import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class TripleJump
{
	public double[] getProbabilities(int lower, int upper, int first, int[] opponents)
	{
		return new double[];
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, int[] p3, boolean hasAnswer, double[] p4) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2 + "," + "{");
		for (int i = 0; p3.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p3[i]);
		}
		System.out.print("}");
		System.out.println("]");
		TripleJump obj;
		double[] answer;
		obj = new TripleJump();
		long startTime = System.currentTimeMillis();
		answer = obj.getProbabilities(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p4.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print(p4[i]);
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(answer[i]);
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p4.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (Math.abs(p4[i] - answer[i]) > 1e-9 * Math.max(1.0, Math.abs(p4[i]))) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		int[] p3;
		double[] p4;
		
		// ----- test 0 -----
		p0 = 1;
		p1 = 2;
		p2 = 1;
		p3 = new int[]{1,2,3,4};
		p4 = new double[]{0.5D,0.5D,0.0D,0.0D,0.0D};
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 3;
		p1 = 7;
		p2 = 5;
		p3 = new int[]{9,9,19,19,19};
		p4 = new double[]{0.0D,0.0D,0.0D,1.0D,0.0D,0.0D};
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 1;
		p1 = 10;
		p2 = 1;
		p3 = new int[]{5};
		p4 = new double[]{0.9753086419753086D,0.024691358024691357D};
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1;
		p1 = 10;
		p2 = 5;
		p3 = new int[]{1,2,3,5,10,11,12,19};
		p4 = new double[]{0.22222222222222227D,0.6234567901234567D,0.05555555555555558D,0.043209876543209846D,0.05555555555555558D,0.0D,0.0D,0.0D,0.0D};
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
